import java.util.*;
public class Main{
    static int n,m;
    static int arr[] = new int[100001];
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        n = scan.nextInt();
        m = scan.nextInt();
        Arrays.fill(arr, -1);
        if(n == m){
            System.out.println(0);
        }else
            bfs(n);
    }
    public static void bfs(int n){
        Queue<Integer> queue = new LinkedList<>();
        arr[n] = 0;
        queue.offer(n);
        while (!queue.isEmpty()) {
            int now = queue.poll();
            if(now == m){
                System.out.println(arr[now]);
                return;
            }
            if (now - 1 >= 0 && arr[now - 1] == -1) {
                queue.offer(n - 1);
                arr[now - 1] = arr[now] + 1;
            }
            if(now * 2 <= arr.length && arr[now * 2] == -1){
                queue.offer(now * 2);
                arr[now * 2] = arr[now];
            }
            if(now + 1 <= arr.length && arr[now + 1] == -1){
                queue.offer(now + 1);
                arr[now + 1] = arr[now] + 1;
            }
        }
    }
}
