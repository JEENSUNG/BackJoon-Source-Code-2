import java.util.*;
public class Main{
	static int[][] arr;
	static int[][] ans;
	static int[] dx = {-1,1,0,0};
	static int[] dy = {0,0,-1,1};
	static int n,m,k;
	static boolean[][] visit;
	static int count = 0;
	static ArrayList<Integer> list;
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		n = scan.nextInt();
		m = scan.nextInt();
		k = scan.nextInt();
		arr = new int[n][m];
		for(int i = 0; i < k; i++) {
			int x1 = scan.nextInt();
			int y1 = scan.nextInt();
			int x2 = scan.nextInt();
			int y2 = scan.nextInt();
			for(int a = y1; a < y2; a++) {
				for(int b = x1; b < x2; b++) {
					arr[a][b] = 1;
				}
			}
		}
		list = new ArrayList<>();
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < m; j++) {
				if(arr[i][j] == 0) {
					count = 0;
					dfs(i,j);
					list.add(count);
				}
			}
		}
		System.out.println(list.size());
		Collections.sort(list);
		for(int i = 0; i < list.size(); i++) {
			System.out.print(list.get(i) + " ");
		}
	}
	public static void dfs(int x, int y) {
		arr[x][y] = 1;
		count++;
		for(int i = 0; i < 4; i++) {
			int nx = x + dx[i];
			int ny = y + dy[i];
			if(nx >= 0 && ny >= 0 && nx < n && ny < m) {
				if(arr[nx][ny] == 0)
					dfs(nx,ny);
			}
		}
	}
}
