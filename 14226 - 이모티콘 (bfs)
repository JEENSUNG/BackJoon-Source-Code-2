import java.awt.*;
import java.util.*;
public class Main{
    static int n,m;
    static int[] arr;
    static boolean[] visit;
    static int time = 0;
    static int x;
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        n = scan.nextInt();
        arr = new int[1001];
        visit = new boolean[1001];
        System.out.println(dfs(1));
    }
    public static int dfs(int x){
        Queue<Points> queue = new LinkedList<>();
        queue.offer(new Points(x,0, 0));
        visit[x] = true;
        while (!queue.isEmpty()) {
            Points now = queue.poll();
            if(n == now.x){
                return now.cnt;
            }
            if(now.x - 1 >= 0){
                queue.offer(new Points(now.x - 1, now.cnt+1, now.state));
            }
            if(now.x + now.state < 1001){
                queue.offer(new Points(now.x + now.state, now.cnt + 1, now.state));
            }
            else{
                queue.offer(new Points(now.x, now.cnt + 1, now.x));
            }
        }
        return 0;
    }
}
class Points{
    int x;
    int cnt;
    int state;
    Points(int x, int cnt, int state){
        this.x = x;
        this.cnt = cnt;
        this.state = state;
    }
}
