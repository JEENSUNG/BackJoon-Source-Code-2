import java.awt.*;
import java.util.*;
public class Main{
    static int n,m;
    static int[][] arr;
    static boolean[] visit;
    static int min = 0;
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        n = scan.nextInt();
        while (n-- > 0) {
            m = scan.nextInt();
            arr = new int[m+1][m+1];
            visit = new boolean[m+1];
            for(int i = 1; i <= m; i++){
                int x = scan.nextInt();
                arr[i][x] = arr[x][i] = 1;
                if(i == arr[i][i]) {
                    visit[i] = true;
                    min++;
                }
            }
            min = 0;
            for(int i = 1; i <= m; i++) {
                if(!visit[i]){
                    dfs(i);
                    min++;
                }
            }
            System.out.println(n - min);
        }
    }
    public static void dfs(int x){
        Queue<Integer> queue = new LinkedList<>();
        queue.offer(x);
        visit[x] = true;
        while (!queue.isEmpty()) {
            int now = queue.poll();
            for(int i = 1; i <= m; i++){
                if(!visit[i] && arr[now][i] == 1){
                    visit[i] = true;
                    queue.offer(i);
                }
            }
        }
    }
}
